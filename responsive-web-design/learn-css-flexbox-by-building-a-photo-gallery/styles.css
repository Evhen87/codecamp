/*Step 7
In order to better visualize how your elements are sized, adding a border can be helpful.

Give your .gallery element a width of 50% and a border set to 5px solid red.

Then give your img elements a width of 100%, padding set to 5px, and a border set to 5px solid blue.*/
/*Step 8
Notice how the blue image border extends beyond the red gallery border. This is due to the way browsers calculate the size of container elements.

The box-sizing property is used to set this behavior. By default, the content-box model is used. With this model, when an element has a specific width, that width is calculated based only on the element's content. Padding and border values get added to the total width, so the element grows to accommodate these values.

Try setting box-sizing to content-box explicitly, with the global * selector. At this point, you will not see any changes, because you are using the default value.*/
/*Step 9
The border-box sizing model does the opposite of content-box. The total width of the element, including padding and border, will be the explicit width set. The content of the element will shrink to make room for the padding and border.

Change the box-sizing property to border-box. Notice how your blue image borders now fit within your red gallery border.*/
* {
   box-sizing: border-box;
 }
 /*Step 12
Remove the margin from your body element, set the font-family to sans-serif, and give it a background-color of #f5f6f7 as the value.*/
body {
   margin: 0;
   font-family: sans-serif;
   background-color: #f5f6f7;
}
 /*Step 10
Now that you have figured out your box-sizing approach, you can clean up the CSS you added to see the changes.

Remove your .gallery and img selectors, and all rules within.*/
/*Step 11
Now your images are too big.

Create a .gallery img selector to target them. Give them all a width of 100% and a max-width of 350px.

Also set the height property to 300px to keep your images a uniform size.*/
.gallery img{
   width: 100%;
   max-width: 350px;
   height: 300px;
}